"""
Django settings for Flyshare project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5!j$(k*=hstmjq27m+t0q)^qic%-3x_+sf@v1q%^hfboas5wdu'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
APPEND_SLASH = False
ALLOWED_HOSTS = ["*"]

AUTH_USER_MODEL = 'UserAuth.UserModel'
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app1',
    'corsheaders',
    'rest_framework',
    'drf_yasg',
    'UserAuth',
]
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.dummy.DummyCache',  # Use 'django.core.cache.backends.dummy.DummyCache' to disable caching.
        'LOCATION': 'unique-snowflake',  # A unique identifier for the cache, required for DummyCache.
    }
}

SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_AGE = 3600
SESSION_COOKIE_SECURE = False
MIDDLEWARE = [
'django.middleware.security.SecurityMiddleware',
'django.contrib.sessions.middleware.SessionMiddleware',
'django.contrib.auth.middleware.AuthenticationMiddleware',
"corsheaders.middleware.CorsMiddleware",
'django.middleware.common.CommonMiddleware',
'django.middleware.csrf.CsrfViewMiddleware',
'django.contrib.messages.middleware.MessageMiddleware',
'django.middleware.clickjacking.XFrameOptionsMiddleware',
'django.middleware.cache.FetchFromCacheMiddleware',
]

ROOT_URLCONF = 'Flyshare.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                
            ],
        },
    },
]

    

WSGI_APPLICATION = 'Flyshare.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
# import os
# DATABASES = {
#     'default': {
#         'ENGINE': 'djongo',
#         'NAME': 'Flyshare',
#         'CLIENT': {
#             'host': os.environ.get('MONGO_URI', 'mongodb://admin:password@mongodb:27017/'),
#             'port': 27017,
#             'username': 'admin',
#             'password': 'password',
#             'authSource': 'admin',
#         }
#     }
# }

DATABASES = {
"default": {
    "ENGINE": "djongo",
    'ENFORCE_SCHEMA': False,
    "NAME": "Flyshare-roomlocalhost1",  # name of your DB which you want to access
    "CLIENT": {
        'host': 'mongodb+srv://Tharun:Tharun%401316@cluster0.ng51njk.mongodb.net/',  # your db_url if not hosted then localhost
        'port': 27017,  # port e.g. 27017
        'username': 'Tharun',
        'password': 'Tharun@1316',
        'authSource': 'admin',  # set your db auth_source if you know
        'authMechanism': 'SCRAM-SHA-1'  # set your auth_mechanism if you know

    }
}
}

# DATABASES = {
# "default": {
#     "ENGINE": "djongo",
#     "NAME": "f",  # name of your DB which you want to access
#     'CLIENT':
#     {'host':'mongodb://admin:admin_password@3.83.235.188:27017/'
#   }
# }
# }
# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True

CORS_ORIGIN_ALLOW_ALL = True

CORS_ORIGIN_WHITELIST = [
#    'http://3.83.235.188:8000',
    # 'http://172.174.250.190:8000',
    'http://98.70.12.179:8000',

]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
import os
STATIC_URL = '/static/'
STATICFILES_DIRS = [
        os.path.join(BASE_DIR,'static'),
    ]
STATIC_ROOT = os.path.join(BASE_DIR,'assets')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'flyshare.services@gmail.com'
# EMAIL_HOST_PASSWORD = 'qxwbhihygzrjuqva'




EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'sampleuser788@gmail.com'
# EMAIL_HOST_PASSWORD = 'vcdl vzmt ulbehobq'
EMAIL_HOST_USER = 'flyshare.services@gmail.com'
EMAIL_HOST_PASSWORD = 'uinciigtguegnqcy'

# AUTHENTICATION_BACKENDS = [
#     'django.contrib.auth.backends.ModelBackend',
#     # other authentication backends if needed
# ]
